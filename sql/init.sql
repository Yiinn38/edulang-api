-- Creaci√≥n de tablas
CREATE TABLE IF NOT EXISTS Users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  role ENUM('admin', 'teacher', 'student') NOT NULL,
  isActive BOOLEAN DEFAULT TRUE,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Students (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  enrollmentNumber VARCHAR(50) NOT NULL UNIQUE,
  firstName VARCHAR(100) NOT NULL,
  lastName VARCHAR(100) NOT NULL,
  dateOfBirth DATE,
  address TEXT,
  phone VARCHAR(20),
  FOREIGN KEY (userId) REFERENCES Users(id),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Teachers (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  firstName VARCHAR(100) NOT NULL,
  lastName VARCHAR(100) NOT NULL,
  specialization VARCHAR(255),
  availability TEXT,
  phone VARCHAR(20),
  FOREIGN KEY (userId) REFERENCES Users(id),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Courses (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  level VARCHAR(50) NOT NULL,
  language VARCHAR(50) NOT NULL,
  schedule TEXT NOT NULL,
  capacity INT NOT NULL,
  teacherId INT,
  startDate DATE,
  endDate DATE,
  isActive BOOLEAN DEFAULT TRUE,
  FOREIGN KEY (teacherId) REFERENCES Teachers(id),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Enrollments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  studentId INT NOT NULL,
  courseId INT NOT NULL,
  enrollmentDate DATE NOT NULL,
  status ENUM('active', 'completed', 'cancelled') DEFAULT 'active',
  FOREIGN KEY (studentId) REFERENCES Students(id),
  FOREIGN KEY (courseId) REFERENCES Courses(id),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Grades (
  id INT AUTO_INCREMENT PRIMARY KEY,
  enrollmentId INT NOT NULL,
  evaluationType VARCHAR(100) NOT NULL,
  score DECIMAL(5,2) NOT NULL,
  comments TEXT,
  evaluationDate DATE NOT NULL,
  FOREIGN KEY (enrollmentId) REFERENCES Enrollments(id),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Payments (
  id INT AUTO_INCREMENT PRIMARY KEY,
  studentId INT NOT NULL,
  amount DECIMAL(10,2) NOT NULL,
  paymentType ENUM('registration', 'monthly') NOT NULL,
  paymentDate DATE NOT NULL,
  description TEXT,
  status ENUM('pending', 'paid', 'cancelled') DEFAULT 'pending',
  FOREIGN KEY (studentId) REFERENCES Students(id),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);